{"ast":null,"code":"import { put, call, takeLatest, take } from \"redux-saga/effects\";\nimport api from \"../Api/index.js\";\nexport const START_GET_MOVIE = \"START_GET_MOVIE\";\nexport const SAVE_MOVIE = \"SAVE_MOVIE\";\nexport const getMovies = payload => ({\n  type: \"START_GET_MOVIE\",\n  payload\n});\nexport default function* rootSaga() {\n  yield takeLatest(\"START_GET_MOVIE\", handleGetMovies);\n}\n\nfunction* handleGetMovies(action) {\n  try {\n    const movies = yield call(api.getMovies, action.payload);\n    yield put({\n      type: \"SAVE_MOVIE\",\n      movies\n    });\n  } catch (error) {\n    yield put({\n      type: \"SAVE_MOVIE\",\n      error\n    });\n  }\n}","map":{"version":3,"sources":["/home/abhishek/Documents/shoptrade/stackoverflow/src/Saga/index.js"],"names":["put","call","takeLatest","take","api","START_GET_MOVIE","SAVE_MOVIE","getMovies","payload","type","rootSaga","handleGetMovies","action","movies","error"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,QAA4C,oBAA5C;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AAEP,OAAO,MAAMC,SAAS,GAAIC,OAAD,KAAc;AACrCC,EAAAA,IAAI,EAAE,iBAD+B;AAErCD,EAAAA;AAFqC,CAAd,CAAlB;AAMP,eAAe,UAAUE,QAAV,GAAqB;AAClC,QAAMR,UAAU,CAAC,iBAAD,EAAoBS,eAApB,CAAhB;AACD;;AAED,UAAUA,eAAV,CAA0BC,MAA1B,EAAkC;AAChC,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMZ,IAAI,CAACG,GAAG,CAACG,SAAL,EAAgBK,MAAM,CAACJ,OAAvB,CAAzB;AACA,UAAMR,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE,YADE;AAERI,MAAAA;AAFQ,KAAD,CAAT;AAID,GAND,CAME,OAAOC,KAAP,EAAc;AACd,UAAMd,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE,YADE;AAERK,MAAAA;AAFQ,KAAD,CAAT;AAID;AACF","sourcesContent":["import { put, call, takeLatest, take } from \"redux-saga/effects\";\r\nimport api from \"../Api/index.js\";\r\n\r\nexport const START_GET_MOVIE = \"START_GET_MOVIE\";\r\nexport const SAVE_MOVIE = \"SAVE_MOVIE\";\r\n\r\nexport const getMovies = (payload) => ({\r\n  type: \"START_GET_MOVIE\",\r\n  payload,\r\n});\r\n\r\n\r\nexport default function* rootSaga() {\r\n  yield takeLatest(\"START_GET_MOVIE\", handleGetMovies);\r\n}\r\n\r\nfunction* handleGetMovies(action) {\r\n  try {\r\n    const movies = yield call(api.getMovies, action.payload);\r\n    yield put({\r\n      type: \"SAVE_MOVIE\",\r\n      movies,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: \"SAVE_MOVIE\",\r\n      error,\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}